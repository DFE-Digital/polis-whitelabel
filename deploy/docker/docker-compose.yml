# To run, build the docker images individually, then
# docker-compose up

# force a full re-build with no cache from previous builds:
# docker-compose build --parallel --no-cache

# to stop:
# docker-compose down

version: "3.4"

services:
  server:
    env_file: ../../server/.envrc
    image: polis-server:latest
    build:
      context: ../../server
      dockerfile: ./server.Dockerfile
    depends_on:
      - "postgres"
      - "file-server"
    networks:
      - "polis-net"
    # Scale the server container to a given number of instances.
    scale: 1

  math:
    container_name: polis-math
    env_file: ../../math/.envrc
    image: polis-math:latest
    depends_on:
      - "postgres"
    build:
      context: ../../math
    networks:
      - "polis-net"

  postgres:
    container_name: polis-postgres
    env_file: ../../database/.envrc
    image: polis-postgres:latest
    restart: always
    build:
      context: ../../database
      dockerfile: ./postgres.Dockerfile
    networks:
      - "polis-net"
    # volumes:
    #   - "backups:/backups"
    #   - "postgres:/var/lib/postgresql/data"

  nginx-proxy:
    container_name: polis-caddy
    image: polis-caddy:latest
    build:
      context: ../../caddy
      dockerfile: caddy.Dockerfile
    depends_on:
      - "server"
    networks:
      - "polis-net"
    ports:
      - ${HTTP_PORT:-80}:${HTTP_PORT:-80}
      - ${HTTPS_PORT:-443}:${HTTPS_PORT:-443}

  file-server:
    container_name: polis-file-server
    image: polis-file-server:latest
    build:
      context: ../../file-server
      dockerfile: ./file-server.Dockerfile
    networks:
      - "polis-net"

networks:
  polis-net:

# volumes:
#   backups:
#   postgres:
